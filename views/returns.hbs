            <script>
                function trytab(){
                   
                    var utype = document.getElementById('utype').value;
                    
                    if(utype == "Branch Manager"){
                        var branch = document.getElementById('whichbranch').value;
                        var select =  document.getElementById('branch'); select.disabled=true;
                        var option;
                        for(i = 0; i< select.options.length ; i++){
                            option = select.options[i];
                            if(option.value == branch){
                                option.setAttribute('selected',true);
                            }
                        }
                        if(document.getElementById('prodordcount').value > 0){
                           // document.getElementById('add').disabled = true;
                        }
                        
                    }

                }
                window.onload = trytab;


                $('a[data-toggle="tab"]').on('show.bs.tab', function(e) {
                    localStorage.setItem('activeTab', $(e.target).attr('href'));
                });
                var activeTab = localStorage.getItem('activeTab');
                if(activeTab){
                    $('#myTab a[href="' + activeTab + '"]').tab('show');
                }

            </script>
            <input type="hidden" id="utype" name="utype" value="{{utype}}">
            <input type="hidden" id="whichbranch" name="whichbranch" value="{{whichbranch}}">
            <div class="container-fluid">

                {{!-- Nav Tabs --}}
                <div class="card">
                    <div class="card-header">

                         <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                            <a class="nav-link active" data-toggle="tab" href="#allreturns">Today's Adjustments</a>
                            </li>

                            <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#addreturn">Add Adjustment</a>
                            </li>
                            <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#archived">Archive</a>
                            </li>

                            </ul>
                    </div>
                
                <div class="tab-content">
                    {{!-- ALL RETURNS --}}
                    <div class="container tab-pane active" id="allreturns" style="padding-top: 30px;">
                            {{!-- FILTER TABLE --}}
                                <div class="dataTables_filter" id="dataTable_filter"> Status: <label> 
                                    <input type="text" class="form-control form-control-sm" 
                                        id="filter" onkeyup="filter()" placeholder="All"></label>
                                </div>
                        {{!-- END FILTER --}}
                         <div style="padding-bottom: 10px;"> </div>
                        <div class="table-responsive">
                            <table class="table" id="retTable">
                                <thead>
                                    <tr>
                                        <th onclick="sortTable(0)">Adjustment Date  <i class="fa fa-sort"></i></th>               
                                        <th>Adjustment # </th>
                                        <th onclick="sortTable(2)">Type  <i class="fa fa-sort"></i></th>
                                        <th>Amount  </th>
                                        <th onclick="sortTable(4)">Status <i class="fa fa-sort"></i></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {{#each returns}}
                                    <tr class="clickable" onclick='window.location="/adjustments/view/{{this._id}}"'>
                                        <td>{{returndate}}</td>
                                        <td> {{this._id}}</td>
                                        <td> {{type}}</td>
                                        <td>{{amount}}</td>
                                        <td>{{status}}</td>
                                    </tr>
                                    {{/each}}
                                </tbody>
                            </table>
                        </div>
                    </div>
               
                {{!-- END OF ALL RETURNS--}}
                    <div class="container tab-pane fade" id="archived" style="padding-top: 30px;">
                            {{!-- FILTER TABLE --}}
                                <div class="dataTables_filter" id="dataTable_filter"> Status: <label> 
                                    <input type="text" class="form-control form-control-sm" 
                                        id="filter2" onkeyup="filter2()" placeholder="All"></label>
                                </div>
                        {{!-- END FILTER --}}
                         <div style="padding-bottom: 10px;"> </div>
                        <div class="table-responsive">
                            <table class="table" id="retTable2">
                                <thead>
                                    <tr>
                                        <th onclick="sortTable2(0)">Adjustment Date  <i class="fa fa-sort"></i></th>               
                                        <th>Adjustment # </th>
                                        <th onclick="sortTable2(2)">Type  <i class="fa fa-sort"></i></th>
                                        <th>Amount  </th>
                                        <th onclick="sortTable2(4)">Status <i class="fa fa-sort"></i></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {{#each archivedreturn}}
                                    <tr class="clickable" onclick='window.location="/adjustments/view/{{this._id}}"'>
                                        <td>{{returndate}}</td>
                                        <td> {{this._id}}</td>
                                        <td> {{type}}</td>
                                        <td>{{amount}}</td>
                                        <td>{{status}}</td>
                                    </tr>
                                    {{/each}}
                                </tbody>
                            </table>
                        </div>
                    </div>
                 {{!-- ADD RETURN --}}
                    <div class="container tab-pane fade" id="addreturn" style="padding-top: 30px;">       
                        <div class="row">
                            <div class="col" id="regform2">
                                <form action="/addreturn" method="POSt">
                                <h3 class="regheader">Adjustment Form</h3>
                                <p id="errormsg" style="color: red;"></p>
                                <div class="row">
                                
                                    <div class="col">
                                        {{!-- Start form --}}
                                            <div class="form-group">
                                                {{!-- Product Name --}}
                                                <label>Adjustment Reference #</label>
                                                <input id="" type="text" name="" class="form-control" placeholder="auto-generate" disabled><br>
                                            </div>
                                    </div>

                                    <div class="col">
                                        <div class="form-group">
                                                {{!-- Product Name --}}
                                                <label>Branch</label>
                                                <select name="branch" id="branch" class="form-control">
                                                    <option value="Branch A"> Branch A</option>
                                                    <option value="Branch B"> Branch B</option>
                                                    <option value="Branch C"> Branch C</option>
                                                </select>
                                            </div>
                                    </div>
                                  </div>

                                  <div class="row">
                                      <div class="col">
                                        {{!-- Start form --}}
                                            <div class="form-group">
                                                {{!-- Product Name --}}
                                                <label>Adjustment Date</label>
                                                <input id="" type="date" name="returndate" class="form-control today" ><br>
                                            </div>
                                    </div>

                                    <div class="col">
                                        {{!-- Start form --}}
                                        <div class="form-group">
                                            <label for="cars">Adjustment Type</label>
                                                <select id="cars" name="type" class="form-control">
                                                    <option value="Sales Return">Sales Return</option>
                                                    <option value="Damaged Goods">Damaged Goods</option>
                                                </select><br>
                                        </div>
                                    </div>

                                  </div>
                                  <div class="row">
                                    <div class="col" style="text-align: center;">
                                        <label for="">Click 'Next' to proceed with adjustments</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br>
                        <div class="row" style="margin-top: 2rem;">
                            <div class="col">
                                <div class="text-md-center dataTables_filter" id="dataTable_filter">
                                    <div style="padding-bottom: 10px;">
                                        <a href="/adjustments" type="button" class="btn btn-secondary btn-sm">Cancel</a>
                                        <button class="btn btn-primary btn-sm" type="submit">Next</button>
                                    </div>
                                </div>
                            </div>
                        </div>  
                        {{!-- END OF ADD CANCEL --}} 
                    </div>
                    {{!-- END OF ADD PRODUCTION ORDERS --}} 

                {{!-- VIEW SUGGESTIONS PRODUCTION ORDERS --}}
                {{!-- END OF VIEW SUGGESTIONS --}} 

               </div> 
               </form>
               {{!-- END TAB CONTENT --}} 

            </div>
            
        </div>
        <br><br>
<!-- Modal -->
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Raw Materials</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <table class="table my-0" id="dataTable">
                    <thead>
                        <tr class="tr-addproducts">
                            <th>Name </th>
                            <th style="width: 25%;">Quantity </th>
                            <th >Unit </th>
                            <th style="width: 10%;"><span> </span></th>
                        </tr>
                    </thead>
            
                    <tbody>
                         {{#each plist}}
                         <form action="/productNewMaterial" method="POST">
                            <tr class="clickable" >
                                <td><img class="mini-pic-list" src="../../assets/img/icons/box-2.png"> {{name}} </td>
                                <td><input required type="text" name="quantity" id="" class="form-control w-60" width="2"></td>
                                <td>
                                    <div class="form-group">
                                        <select id="cars" name="UOM" class="form-control">
                                            <option value="gram/s">gram/s</option>
                                            <option value="tbsp">tbsp</option>
                                            <option value="tsp">tsp</option>
                                        </select>
                                    </div>
                                    
                                </td>
                                <input type="hidden" name="rawMaterialID" value="{{this._id}}">
                                <input type="hidden" name="productID" value="{{../product._id}}">
                                <!-- #each disallows access to product._id-->
                                <input type="hidden" name="name" value="{{name}}">
                                

                                <td style="width: 2%;">
                                    <button class="btn btn-primary btn-sm" type="submit" >Add</button>
                                </td>
                            </tr>
                        </form>
                        {{/each}}
                    </tbody>

                    <tfoot>
                        
                    </tfoot>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
            </div>

        </div>
    </div>        

        <script>
        function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("retTable");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc"; 
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
            //start by saying there should be no switching:
            shouldSwitch = false;
            /*Get the two elements you want to compare,
            one from current row and one from the next:*/
            x = rows[i].getElementsByTagName("TD")[n];
            y = rows[i + 1].getElementsByTagName("TD")[n];
            /*check if the two rows should switch place,
            based on the direction, asc or desc:*/
            if (dir == "asc") {
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                //if so, mark as a switch and break the loop:
                shouldSwitch= true;
                break;
                }
            } else if (dir == "desc") {
                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                //if so, mark as a switch and break the loop:
                shouldSwitch = true;
                break;
                }
            }
            }
            if (shouldSwitch) {
            /*If a switch has been marked, make the switch
            and mark that a switch has been done:*/
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            //Each time a switch is done, increase this count by 1:
            switchcount ++;      
            } else {
            /*If no switching has been done AND the direction is "asc",
            set the direction to "desc" and run the while loop again.*/
            if (switchcount == 0 && dir == "asc") {
                dir = "desc";
                switching = true;
            }
            }
        }
        }

        function sortTable2(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("retTable2");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc"; 
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
            //start by saying there should be no switching:
            shouldSwitch = false;
            /*Get the two elements you want to compare,
            one from current row and one from the next:*/
            x = rows[i].getElementsByTagName("TD")[n];
            y = rows[i + 1].getElementsByTagName("TD")[n];
            /*check if the two rows should switch place,
            based on the direction, asc or desc:*/
            if (dir == "asc") {
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                //if so, mark as a switch and break the loop:
                shouldSwitch= true;
                break;
                }
            } else if (dir == "desc") {
                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                //if so, mark as a switch and break the loop:
                shouldSwitch = true;
                break;
                }
            }
            }
            if (shouldSwitch) {
            /*If a switch has been marked, make the switch
            and mark that a switch has been done:*/
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            //Each time a switch is done, increase this count by 1:
            switchcount ++;      
            } else {
            /*If no switching has been done AND the direction is "asc",
            set the direction to "desc" and run the while loop again.*/
            if (switchcount == 0 && dir == "asc") {
                dir = "desc";
                switching = true;
            }
            }
        }
        }

        function filter() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("filter");
        filter = input.value.toUpperCase();
        table = document.getElementById("retTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[4];
            if (td) {
            txtValue = td.textContent || td.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = "";
            } else {
                tr[i].style.display = "none";
            }
            }       
        }
        }

        function filter2() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("filter2");
        filter = input.value.toUpperCase();
        table = document.getElementById("retTable2");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[4];
            if (td) {
            txtValue = td.textContent || td.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = "";
            } else {
                tr[i].style.display = "none";
            }
            }       
        }
        }
        
        let today = new Date().toISOString().substr(0, 10);
        document.querySelector(".today").value = today;

    </script>
